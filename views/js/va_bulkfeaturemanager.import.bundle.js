/*! For license information please see va_bulkfeaturemanager.import.bundle.js.LICENSE.txt */
(()=>{"use strict";class t{show(){this.progressModal.modal("show")}hide(){this.progressModal.modal("hide")}updateProgress(t,s){const e=parseInt(t,10),o=parseInt(s,10),r=this.progressBar,i=e/o*100;r.css("width",`${i}%`),r.find("> span").text(`${e}/${o}`)}updateProgressLabel(t){this.progressLabel.text(t)}setImportingProgressLabel(){this.updateProgressLabel(this.progressModal.find(".modal-body").data("importing-label"))}setImportedProgressLabel(){this.updateProgressLabel(this.progressModal.find(".modal-body").data("imported-label"))}showInfoMessages(t){this.showMessages(this.infoMessageBlock,t)}showWarningMessages(t){this.showMessages(this.warningMessageBlock,t)}showErrorMessages(t){this.showMessages(this.errorMessageBlock,t)}showSuccessMessage(){this.successMessageBlock.removeClass("d-none")}showPostLimitMessage(t){this.postLimitMessage.find("#post_limit_value").text(t),this.postLimitMessage.removeClass("d-none")}showMessages(t,s){let e=!1;Object.values(s).forEach((s=>{e=!0;const o=$("<div>");o.text(s),o.addClass("message"),t.append(o)})),e&&t.removeClass("d-none")}showContinueImportButton(){this.continueImportButton.removeClass("d-none")}hideContinueImportButton(){this.continueImportButton.addClass("d-none")}showAbortImportButton(){this.abortImportButton.removeClass("d-none")}hideAbortImportButton(){this.abortImportButton.addClass("d-none")}showCloseModalButton(){this.closeModalButton.removeClass("d-none")}hideCloseModalButton(){this.closeModalButton.addClass("d-none")}clearWarningMessages(){this.warningMessageBlock.addClass("d-none").find(".message").remove()}reset(){this.updateProgress(0,0),this.updateProgressLabel(this.progressLabel.attr("default-value")),this.continueImportButton.addClass("d-none"),this.abortImportButton.addClass("d-none"),this.closeModalButton.addClass("d-none"),this.successMessageBlock.addClass("d-none"),this.infoMessageBlock.addClass("d-none").find(".message").remove(),this.errorMessageBlock.addClass("d-none").find(".message").remove(),this.postLimitMessage.addClass("d-none"),this.clearWarningMessages()}get progressModal(){return $("#import_progress_modal")}get progressBar(){return this.progressModal.find(".progress-bar")}get infoMessageBlock(){return $(".js-import-info")}get errorMessageBlock(){return $(".js-import-errors")}get warningMessageBlock(){return $(".js-import-warnings")}get successMessageBlock(){return $(".js-import-success")}get postLimitMessage(){return $(".js-post-limit-warning")}get continueImportButton(){return $(".js-continue-import")}get abortImportButton(){return $(".js-abort-import")}get closeModalButton(){return $(".js-close-modal")}get progressLabel(){return $("#import_progress_bar").find(".progress-details-text")}}class s{constructor(){this.targetExecutionTime=5e3,this.maxAcceleration=4,this.minBatchSize=5,this.maxBatchSize=100,this.importStartTime=0,this.actualExecutionTime=0}markImportStart(){this.importStartTime=(new Date).getTime()}markImportEnd(){this.actualExecutionTime=(new Date).getTime()-this.importStartTime}calculateAcceleration(){return Math.min(this.maxAcceleration,this.targetExecutionTime/this.actualExecutionTime)}calculateBatchSize(t,s=0){if(!this.importStartTime)throw new Error("Import start is not marked.");if(!this.actualExecutionTime)throw new Error("Import end is not marked.");const e=[this.maxBatchSize,Math.max(this.minBatchSize,Math.floor(t*this.calculateAcceleration()))];return s>0&&e.push(s),Math.min(...e)}}class e{constructor(){this.postSizeLimitThreshold=.9}isReachingPostSizeLimit(t,s){return s>=t*this.postSizeLimitThreshold}getRequiredPostSizeInMegabytes(t){return parseInt(t/1048576,10)}}var o=Object.defineProperty,r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,n=(t,s,e)=>s in t?o(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e,h=(t,s)=>{for(var e in s||(s={}))i.call(s,e)&&n(t,e,s[e]);if(r)for(var e of r(s))a.call(s,e)&&n(t,e,s[e]);return t};class l{constructor(){this.configuration={},this.importConfiguration={},this.progressModal=new t,this.batchSizeCalculator=new s,this.postSizeChecker=new e,this.importUrl="",this.totalRowsCount=0,this.hasWarnings=!1,this.hasErrors=!1,this.importCancelRequested=!1,this.defaultBatchSize=5}import(t,s){this.mergeConfiguration(s),this.importUrl=t,this.totalRowsCount=0,this.hasWarnings=!1,this.hasErrors=!1,this.progressModal.reset(),this.progressModal.show(),this.ajaxImport(0,this.defaultBatchSize)}ajaxImport(t,s,e=!0,o={}){this.mergeConfiguration({offset:t,limit:s,validateOnly:e?1:0,crossStepsVars:JSON.stringify(o)}),this.onImportStart(),$.post({url:this.importUrl,dataType:"json",data:this.configuration,success:o=>{if(this.importCancelRequested)return this.cancelImport(),!1;const r=o.errors&&o.errors.length,i=o.warnings&&o.warnings.length,a=o.notices&&o.notices.length;if(void 0!==o.totalCount&&o.totalCount&&(this.totalRowsCount=o.totalCount),this.progressModal.updateProgress(o.doneCount,this.totalRowsCount),e||this.progressModal.setImportingProgressLabel(),!e&&a&&this.progressModal.showInfoMessages(o.notices),r){if(this.hasErrors=!0,this.progressModal.showErrorMessages(o.errors),!e)return this.onImportStop(),!1}else i&&(this.hasWarnings=!0,this.progressModal.showWarningMessages(o.warnings));if(!o.isFinished){this.batchSizeCalculator.markImportEnd();const r=t+s,i=this.batchSizeCalculator.calculateBatchSize(s,this.totalRowsCount);return this.postSizeChecker.isReachingPostSizeLimit(o.postSizeLimit,o.nextPostSize)&&this.progressModal.showPostLimitMessage(this.postSizeChecker.getRequiredPostSizeInMegabytes(o.nextPostSize)),this.ajaxImport(r,i,e,o.crossStepsVariables)}return e?this.hasErrors?(this.onImportStop(),!1):this.hasWarnings?(this.progressModal.showContinueImportButton(),this.onImportStop(),!1):(this.progressModal.updateProgress(this.totalRowsCount,this.totalRowsCount),this.ajaxImport(0,this.defaultBatchSize,!1)):this.onImportFinish()},error:(t,s)=>{let e=s;"parsererror"===e&&(e="Technical error: Unexpected response returned by server. Import stopped."),this.onImportStop(),this.progressModal.showErrorMessages([e])}})}continueImport(){if(!this.configuration)throw new Error("Missing import configuration. Make sure the import had started before continuing.");this.progressModal.hideContinueImportButton(),this.progressModal.hideCloseModalButton(),this.progressModal.clearWarningMessages(),this.ajaxImport(0,this.defaultBatchSize,!1)}set configuration(t){this.importConfiguration=t}get configuration(){return this.importConfiguration}set progressModal(t){this.progressModal=t}get progressModal(){return this.progressModal}requestCancelImport(){this.importCancelRequested=!0}mergeConfiguration(t){this.importConfiguration=h(h({},this.importConfiguration),t)}cancelImport(){this.progressModal.hide(),this.importCancelRequested=!1}onImportStop(){this.progressModal.showCloseModalButton(),this.progressModal.hideAbortImportButton()}onImportFinish(){this.onImportStop(),this.progressModal.showSuccessMessage(),this.progressModal.setImportedProgressLabel(),this.progressModal.updateProgress(this.totalRowsCount,this.totalRowsCount)}onImportStart(){this.batchSizeCalculator.markImportStart(),this.progressModal.showAbortImportButton()}}(0,window.$)((()=>{Object.defineProperty(l.prototype,"progressModal",{get(){return this._progressModal},set(t){this._progressModal=t}});const t=new l;t._progressModal=t.progressModal,console.log(t)}))})();